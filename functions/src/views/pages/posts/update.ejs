<!DOCTYPE html>
<html>

<head>
  <%- include('../../partials/common/head'); %>

    <!-- prettier-ignore -->
    <script>(g => { var h, a, k, p = "The Google Maps JavaScript API", c = "google", l = "importLibrary", q = "__ib__", m = document, b = window; b = b[c] || (b[c] = {}); var d = b.maps || (b.maps = {}), r = new Set, e = new URLSearchParams, u = () => h || (h = new Promise(async (f, n) => { await (a = m.createElement("script")); e.set("libraries", [...r] + ""); for (k in g) e.set(k.replace(/[A-Z]/g, t => "_" + t[0].toLowerCase()), g[k]); e.set("callback", c + ".maps." + q); a.src = `https://maps.${c}apis.com/maps/api/js?` + e; d[q] = f; a.onerror = () => h = n(Error(p + " could not load.")); a.nonce = m.querySelector("script[nonce]")?.nonce || ""; m.head.append(a) })); d[l] ? console.warn(p + " only loads once. Ignoring:", g) : d[l] = (f, ...n) => r.add(f) && u().then(() => d[l](f, ...n)) })
        ({ key: googleMapsAPIKey, v: "weekly" });</script>
    <script src="/javascripts/tslDef.js?ver=20240106230341"></script>
    <script>
      var targetPost = JSON.parse('<%- JSON.stringify(post) %>');
    </script>
    <script src="/javascripts/tslGMapUtil.js?ver=20240106230341"></script>
    <script src="/javascripts/updatePostPage.js?ver=20240106230341"></script>
    <script src="https://polyfill.io/v3/polyfill.min.js?features=default"></script>
</head>

<body>
  <div class="flex flex-col" style="min-height: 100svh; max-height: 100svh;">
    <%- include('../../partials/common/header'); %>
      <!-- Main Body -->
      <div class="grow overflow-y-scroll">
        <%- include('../../partials/common/page-title', {title: '投稿編集' }); %>
        <div class="p-2">
          <% const warningList = [
              "後からいつでも削除できます。",
              "個人を特定できる情報は書かないこと。",
              "公序良俗に反する投稿は行わないこと。",
              "著作権・肖像権に注意すること。",
              "画像ファイルは、リサイズ（圧縮）されて送信されます。ファイルサイズが小さくなり、データ通信量が軽減されますが、画質が劣化する場合があります。",
            ] %>
            <%- include('../../partials/util/warning-accordion', {title: "投稿前の注意事項", warningList: warningList}); %>
          <div>
            <input id="firestoreDocId" type="hidden" value="<%= post.firestoreDocId %>" />
            <div class="mt-3">
              <label for="formFile" class="form-label">写真は変更不可</label>
            </div>
            <div class="mt-3">
              <div id="printPhoto" class="border rounded h-40 flex justify-center items-center">
                <img src="<%= post.photoBase64 %>" class="h-40">
              </div>
            </div>
            <div class="mt-3">
              <label class="form-label">カテゴリ</label>
              <select id="postCategory" name="postCategory" class="form-select" aria-label="Default select example">
                <% for (let category of categories) { %>
                  <option value="<%= category.getId() %>" <% if (post.postCategory.id === category.getId()) { %>selected<% } %>>
                    <%= category.getEmoji() %>　<%= category.getLabel() %>
                  </option>
                  <% } %>
              </select>
            </div>
            <div class="mt-3">
              <label class="form-label">位置選択（写真を撮った位置をタップしてください）</label>
              <div class="flex justify-center items-center">
                <div id="map" class="w-[90%] h-[200px]"></div>
              </div>
              <input id="markerLat" type="hidden" name="markerLat" />
              <input id="markerLng" type="hidden" name="markerLng" />
            </div>
            <div class="mt-3">
              <label for="description" class="form-label">コメント</label>
              <textarea name="comment" required class="form-control" id="description" maxlength="100"
                rows="3" placeholder="晴れている時は富士山が見えます！&#10;4月が満開の時期です〜&#10;コーヒーが美味しいですよ、など"><%= post.description %></textarea>
            </div>
            <br />
            <%- include('../../partials/util/icon-button', {label: "変更確定", onClickCode: "return updatePost();", googleIconName: "check_circle"}); %>
            <script>
              function validateMap() {
                const latValue = document.getElementById("markerLat").value;
                const lngValue = document.getElementById("markerLng").value;
                console.log(latValue + " " + lngValue);
                if (latValue == null || lngValue == null) {
                  // marker has not been set yet.
                  alert('地図にマーカーをセットしてください。')
                  return false;
                }
                return true;
              }

              function updatePost(){
                if(!validateMap()){
                  return;
                }
                if (!(confirm('本当に変更して良いですか？'))) {
                  return;
                }

                const firestoreDocId = document.getElementById("firestoreDocId").value;
                const postCategorySelect = document.getElementById("postCategory");
                const postCategoryId = postCategorySelect.options[postCategorySelect.selectedIndex].value;
                const lat = document.getElementById('markerLat').value;
                const lng = document.getElementById('markerLng').value;
                const description = document.getElementById('description').value;
                const selfIntroduction = document.getElementById('selfIntroduction').value;
                const data = {firebaseUserId: firebaseUserId, userName: userName, selfIntroduction: selfIntroduction};
                fetch('/posts/<%= post.firestoreDocId %>', {
                  method: 'PUT',
                  headers: {
                    'Content-Type': 'application/json'
                  },
                  body: JSON.stringify({
                    firestoreDocId: firestoreDocId,
                    postCategoryId: postCategoryId,
                    lat: lat,
                    lng: lng,
                    description: description
                  })
                }).then((response) => {
                  TslLogUtil.debug('fetch then');
                  
                  setTimeout((() => {
                    // if it's too early, old data can be printed..
                    window.location.href = '/users/my-page'
                  }), 500);
                  
                }).catch((error) => {
                  TslLogUtil.error('fetch error');
                  TslLogUtil.error(error);
                  window.location.href = '/errors/500';
                })
              }
            </script>
          </div>
        </div>
      </div>
      <%- include('../../partials/common/footer', {currentMenu: 4}); %>
  </div>
</body>

</html>